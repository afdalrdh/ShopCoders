
import mongoose from 'mongoose';
import Image from 'next/legacy/image';
import React, { useEffect, useState } from 'react'
import Navbar from '../../../components/Navbar.jsx';
import Users from "../../../models/UserSchema.js"
import styles from "../../../styles/Userprofile.module.css"
import { useUser } from "@auth0/nextjs-auth0";
import Link from 'next/link';
import { BsFillCartFill, BsFillHeartFill, BsFillEyeFill } from "react-icons/bs";
import Rating from '@mui/material/Rating';
import Head from "next/head";
import { AiOutlineShoppingCart } from "react-icons/ai";
import profile from "../../../public/assets/profile.svg"



const Profile = ({ singleuser }) => {

    const { user, error, isLoading } = useUser();
    const [profiledetails, setprofiledetails] = useState({ email: "", address: "", state: "", pincode: "", city: "", phone: "" });

    useEffect(() => {

        if (singleuser) {
            setprofiledetails({
                email: singleuser.email,
                address: singleuser.address,
                state: singleuser.state,
                pincode: singleuser.pincode,
                city: singleuser.city,
                phone: singleuser.phone
            })
        }


    }, [])

    const handleChange = (e) => {
        setprofiledetails({
            ...profiledetails,
            [e.target.name]: e.target.value
        })
    }

    const handleSubmit = (e) => {


        fetch(`${process.env.NEXT_PUBLIC_SHOP_URL}/api/products/addproductstocart`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(profiledetails)
        })

            .then(res => res.json())
            .then(data => {

                if (data.sucess === "sucess") {
                    alert("Profile Updated");
                }
            }
            )
            .catch(err => console.log(err))

    }





    return (
        <>
            {user && <Head>
                <title> {user.name.split(" ")[0]} | Cart </title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>}


            <div className={styles.cart_mainparent}>

                <Navbar />

                <div className="container" style={{ marginTop: "5rem" }}>
                    <h3 className={styles.cart_cartusername}> Welcome to your profile, {user && user.name.split(" ")[0]} </h3>
                </div>



                <div className={`container ${styles.profileparent}`} style={{ marginTop: "1rem", marginBottom: "5rem" }}>
                    <div className={`row ${styles.profilerow}`}>

                        <div className={`col-lg-6 col-md-12 ${styles.profileimagecol}`}>

                            <Image src={profile} alt="profile" width={500} height={500} className={styles.profileimg} />

                        </div>

                        <div className={`col-lg-6 col-md-12 ${styles.profiledetailscol}`}>

                            {singleuser && <div className={styles.profiledets}>

                                <p className={`${styles.profile_inputs}`}  >Email : <span className={styles.profile_inputs_child}>{singleuser.email}</span> </p>

                                <p className={`${styles.profile_inputs}`}  >Address : <span className={styles.profile_inputs_child}>{singleuser.address}</span> </p>

                                <p className={`${styles.profile_inputs}`}  >State : <span className={styles.profile_inputs_child}>{singleuser.state}</span> </p>

                                <p className={`${styles.profile_inputs}`}  >Pincode : <span className={styles.profile_inputs_child}>{singleuser.city}</span> </p>

                                <p className={`${styles.profile_inputs}`}  >City : <span className={styles.profile_inputs_child}>{singleuser.pincode}</span> </p>

                                <p className={`${styles.profile_inputs}`}  >Phone : <span className={styles.profile_inputs_child}>{singleuser.phone}</span> </p>







                                <button type="button" className={`btn btn-warning ${styles.updatebtn}`} data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                                    Update profile
                                </button>


                                <div className="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabIndex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                                    <div className="modal-dialog">
                                        <div className="modal-content">
                                            <div className="modal-header">
                                                <h5 className="modal-title" id="staticBackdropLabel">Update Profile</h5>
                                                <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div className="modal-body">
                                                <input type="text" className={`form-control ${styles.profile_inputsf1}`} value={profiledetails.email} name="email" placeholder='' />

                                                <input type="text" className={`form-control ${styles.profile_inputsf1}`} value={profiledetails.address} name="address" placeholder='Address' onChange={(e) => { handleChange(e) }} />

                                                <input type="text" className={`form-control ${styles.profile_inputsf1}`} value={profiledetails.state} name="state" placeholder='State' onChange={(e) => { handleChange(e) }} />

                                                <input type="text" className={`form-control ${styles.profile_inputsf1}`} value={profiledetails.pincode} name="pincode" placeholder='Pincode' onChange={(e) => { handleChange(e) }} />

                                                <input type="text" className={`form-control ${styles.profile_inputsf1}`} value={profiledetails.city} name="city" placeholder='City' onChange={(e) => { handleChange(e) }} />

                                                <input type="text" className={`form-control ${styles.profile_inputsf1}`} value={profiledetails.phone} name="phone" placeholder='Phone' onChange={(e) => { handleChange(e) }} />
                                            </div>

                                            <div className="modal-footer">
                                                <button type="button" className={`btn btn-warning ${styles.updatebtn}`} style={{ marginTop: "0" }} data-bs-dismiss="modal" onClick={() => { handleSubmit() }} >Update</button>

                                            </div>
                                        </div>
                                    </div>
                                </div>



                            </div>}
                        </div>
                    </div>

                    <br />





                </div>


            </div>



        </>
    )
}

export async function getServerSideProps(context) {

    if (!mongoose.connections[0].readyState) {
        await mongoose.connect(process.env.MONGO_URI);
    }

    let singleproduct = context.query.slug;
    let singleuser = await Users.findOne({ email: context.query.slug });

    return {
        props: {
            singleuser: JSON.parse(JSON.stringify(singleuser)),
        }, // will be passed to the page component as props
    }
}

export default Profile